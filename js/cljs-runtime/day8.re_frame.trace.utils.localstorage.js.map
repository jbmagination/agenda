{"version":3,"sources":["day8/re_frame/trace/utils/localstorage.cljs"],"sourcesContent":["(ns day8.re-frame.trace.utils.localstorage\n  (:require [goog.storage.Storage]\n            [goog.storage.mechanism.HTML5LocalStorage]\n            [cljs.reader :as reader]\n            [clojure.string :as str])\n  (:refer-clojure :exclude [get]))\n\n(def storage (goog.storage.Storage. (goog.storage.mechanism.HTML5LocalStorage.)))\n\n(def safe-prefix \"day8.re-frame.trace.\")\n\n(defn- safe-key [key]\n  \"Adds a unique prefix to local storage keys to ensure they don't collide with the host application\"\n  (str safe-prefix key))\n\n(defn get\n  \"Gets a re-frame-trace value from local storage.\"\n  ([key]\n   (get key nil))\n  ([key not-found]\n   (let [value (.get storage (safe-key key))]\n     (if (undefined? value)\n       not-found\n       (reader/read-string value)))))\n\n(defn save!\n  \"Saves a re-frame-trace value to local storage.\"\n  [key value]\n  (.set storage (safe-key key) (pr-str value)))\n\n(defn delete-all-keys!\n  \"Deletes all re-frame-trace config keys\"\n  []\n  (doseq [k (js/Object.keys js/localStorage)]\n    (when (str/starts-with? k safe-prefix)\n      (.remove storage k))))\n"],"mappings":";;;;;;AAOA,AAAKA,iDAAQ,KAAAC,qBAAuB,KAAAC;AAEpC,qDAAA,rDAAKC;AAEL,kDAAA,lDAAOC,4GAAUC;AAAjB,AAAA;AAEE,oDAAKF,gGAAYE;;AAEnB,AAAA;;;6CAAA,qDAAAC,lGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,2EAAA,3EAAMD,sFAEFH;AAFJ,AAGG,oFAAA,7EAACK,yEAAIL;;;AAHR,AAAA,2EAAA,3EAAMG,sFAIFH,IAAIM;AAJR,AAKG,IAAMC,QAAM,AAAMZ,mDAAQ,AAACI,gDAASC;AAApC,AACE,GAAI,YAAYO;AACdD;;AACA,OAACE,sDAAmBD;;;;AAR3B,AAAA,qEAAA,rEAAMJ;;AAAN,AAUA;;;oDAAA,pDAAMM,gHAEHT,IAAIO;AAFP,AAGE,OAAMZ,mDAAQ,AAACI,gDAASC,KAAK,AAACU,wGAAOH;;AAEvC;;;+DAAA,/DAAMI;AAAN,AAGE,IAAAC,aAAA,AAAAC,cAAU,AAACa,YAAeC;IAA1Bb,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,QAAA,AAAAD,kDAAAE,tDAAQS;AAAR,AAAA,AACE,GAAM,AAACG,kCAAiBH,EAAE3B;AAA1B,AACE,AAASH,sDAAQ8B;;AADnB;;AADF;AAAA,eAAAb;eAAAE;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAC,qBAAA,AAAAJ,cAAAD;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,iBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,kBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,QAAA,AAAAI,gBAAAX,pBAAQa;AAAR,AAAA,AACE,GAAM,AAACG,kCAAiBH,EAAE3B;AAA1B,AACE,AAASH,sDAAQ8B;;AADnB;;AADF;AAAA,eAAA,AAAAD,eAAAZ;eAAA;eAAA;eAAA;;;;;;;;AAAA","names":["day8.re-frame.trace.utils.localstorage/storage","goog/storage.Storage","goog/storage.mechanism.HTML5LocalStorage","day8.re-frame.trace.utils.localstorage/safe-prefix","day8.re-frame.trace.utils.localstorage/safe-key","key","var_args","G__20832","day8.re-frame.trace.utils.localstorage/get","js/Error","day8.re_frame.trace.utils.localstorage.get.cljs$core$IFn$_invoke$arity$2","not-found","value","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","day8.re-frame.trace.utils.localstorage/save!","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame.trace.utils.localstorage/delete-all-keys!","seq__20833","cljs.core/seq","chunk__20834","count__20835","i__20836","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","k","js/Object.keys","js/localStorage","clojure.string/starts-with?"]}