{"version":3,"sources":["mranderson047/garden/v1v3v3/garden/units.cljc"],"sourcesContent":["(ns mranderson047.garden.v1v3v3.garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [mranderson047.garden.v1v3v3.garden.types :as types]\n       [mranderson047.garden.v1v3v3.garden.util :as util])\n      (:import\n       [mranderson047.garden.v1v3v3.garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [mranderson047.garden.v1v3v3.garden.types :as types :refer [CSSUnit]]\n        [mranderson047.garden.v1v3v3.garden.util :as util])\n       (:require-macros\n        [mranderson047.garden.v1v3v3.garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [;; Does `.getName` even work in CLJS? -- @noprompt\n            ex-message (util/format \"Unable to convert from %s to %s\"\n                                    (.getName type)\n                                    (name unit))\n            ;; TODO: This needs to be populated with more helpful\n            ;; data.\n            ex-data {:given {:type type\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (* m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (/ m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n"],"mappings":"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","names":["mranderson047.garden.v1v3v3.garden.units/length-units","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","mranderson047.garden.v1v3v3.garden.units/angular-units","mranderson047.garden.v1v3v3.garden.units/time-units","mranderson047.garden.v1v3v3.garden.units/frequency-units","mranderson047.garden.v1v3v3.garden.units/resolution-units","mranderson047.garden.v1v3v3.garden.units/unit?","x","mranderson047.garden.v1v3v3.garden.types/CSSUnit","mranderson047.garden.v1v3v3.garden.units/length?","and__3938__auto__","cljs.core/contains?","mranderson047.garden.v1v3v3.garden.units/angle?","mranderson047.garden.v1v3v3.garden.units/time?","mranderson047.garden.v1v3v3.garden.units/frequency?","mranderson047.garden.v1v3v3.garden.units/resolution?","mranderson047.garden.v1v3v3.garden.units/conversions","mranderson047.garden.v1v3v3.garden.units/convertable?","unit","p__17770","map__17771","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","v2","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.util.format.cljs$core$IFn$_invoke$arity$variadic","cljs.core/name","cljs.core/first","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/unit-re","mranderson047.garden.v1v3v3.garden.units/read-unit","s","temp__5457__auto__","vec__17777","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","_","magnitude","cljs.core/re-matches","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","mranderson047.garden.v1v3v3.garden.units/make-unit-predicate","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/make-unit-fn","ex-message","cljs.core/type","ex-data","mranderson047.garden.v1v3v3.garden.units/make-unit-adder","u","y","map__17792","map__17793","m1","m2","G__17799","more","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","u+","mranderson047$garden$v1v3v3$garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/make-unit-subtractor","G__17805","map__17808","map__17809","G__17815","u-","mranderson047$garden$v1v3v3$garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/make-unit-multiplier","map__17823","map__17824","G__17831","u*","mranderson047$garden$v1v3v3$garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/make-unit-divider","G__17836","map__17838","map__17839","G__17848","ud","mranderson047$garden$v1v3v3$garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/cm?","mranderson047.garden.v1v3v3.garden.units/cm+","mranderson047.garden.v1v3v3.garden.units/cm-","mranderson047.garden.v1v3v3.garden.units/cm*","mranderson047.garden.v1v3v3.garden.units/cm-div","mranderson047.garden.v1v3v3.garden.units/cm","mranderson047.garden.v1v3v3.garden.units/mm?","mranderson047.garden.v1v3v3.garden.units/mm+","mranderson047.garden.v1v3v3.garden.units/mm-","mranderson047.garden.v1v3v3.garden.units/mm*","mranderson047.garden.v1v3v3.garden.units/mm-div","mranderson047.garden.v1v3v3.garden.units/mm","mranderson047.garden.v1v3v3.garden.units/in?","mranderson047.garden.v1v3v3.garden.units/in+","mranderson047.garden.v1v3v3.garden.units/in-","mranderson047.garden.v1v3v3.garden.units/in*","mranderson047.garden.v1v3v3.garden.units/in-div","mranderson047.garden.v1v3v3.garden.units/in","mranderson047.garden.v1v3v3.garden.units/px?","mranderson047.garden.v1v3v3.garden.units/px+","mranderson047.garden.v1v3v3.garden.units/px-","mranderson047.garden.v1v3v3.garden.units/px*","mranderson047.garden.v1v3v3.garden.units/px-div","mranderson047.garden.v1v3v3.garden.units/px","mranderson047.garden.v1v3v3.garden.units/pt?","mranderson047.garden.v1v3v3.garden.units/pt+","mranderson047.garden.v1v3v3.garden.units/pt-","mranderson047.garden.v1v3v3.garden.units/pt*","mranderson047.garden.v1v3v3.garden.units/pt-div","mranderson047.garden.v1v3v3.garden.units/pt","mranderson047.garden.v1v3v3.garden.units/pc?","mranderson047.garden.v1v3v3.garden.units/pc+","mranderson047.garden.v1v3v3.garden.units/pc-","mranderson047.garden.v1v3v3.garden.units/pc*","mranderson047.garden.v1v3v3.garden.units/pc-div","mranderson047.garden.v1v3v3.garden.units/pc","mranderson047.garden.v1v3v3.garden.units/percent?","mranderson047.garden.v1v3v3.garden.units/percent+","mranderson047.garden.v1v3v3.garden.units/percent-","mranderson047.garden.v1v3v3.garden.units/percent*","mranderson047.garden.v1v3v3.garden.units/percent-div","mranderson047.garden.v1v3v3.garden.units/percent","mranderson047.garden.v1v3v3.garden.units/em?","mranderson047.garden.v1v3v3.garden.units/em+","mranderson047.garden.v1v3v3.garden.units/em-","mranderson047.garden.v1v3v3.garden.units/em*","mranderson047.garden.v1v3v3.garden.units/em-div","mranderson047.garden.v1v3v3.garden.units/em","mranderson047.garden.v1v3v3.garden.units/ex?","mranderson047.garden.v1v3v3.garden.units/ex+","mranderson047.garden.v1v3v3.garden.units/ex-","mranderson047.garden.v1v3v3.garden.units/ex*","mranderson047.garden.v1v3v3.garden.units/ex-div","mranderson047.garden.v1v3v3.garden.units/ex","mranderson047.garden.v1v3v3.garden.units/ch?","mranderson047.garden.v1v3v3.garden.units/ch+","mranderson047.garden.v1v3v3.garden.units/ch-","mranderson047.garden.v1v3v3.garden.units/ch*","mranderson047.garden.v1v3v3.garden.units/ch-div","mranderson047.garden.v1v3v3.garden.units/ch","mranderson047.garden.v1v3v3.garden.units/rem?","mranderson047.garden.v1v3v3.garden.units/rem+","mranderson047.garden.v1v3v3.garden.units/rem-","mranderson047.garden.v1v3v3.garden.units/rem*","mranderson047.garden.v1v3v3.garden.units/rem-div","mranderson047.garden.v1v3v3.garden.units/rem","mranderson047.garden.v1v3v3.garden.units/vw?","mranderson047.garden.v1v3v3.garden.units/vw+","mranderson047.garden.v1v3v3.garden.units/vw-","mranderson047.garden.v1v3v3.garden.units/vw*","mranderson047.garden.v1v3v3.garden.units/vw-div","mranderson047.garden.v1v3v3.garden.units/vw","mranderson047.garden.v1v3v3.garden.units/vh?","mranderson047.garden.v1v3v3.garden.units/vh+","mranderson047.garden.v1v3v3.garden.units/vh-","mranderson047.garden.v1v3v3.garden.units/vh*","mranderson047.garden.v1v3v3.garden.units/vh-div","mranderson047.garden.v1v3v3.garden.units/vh","mranderson047.garden.v1v3v3.garden.units/vmin?","mranderson047.garden.v1v3v3.garden.units/vmin+","mranderson047.garden.v1v3v3.garden.units/vmin-","mranderson047.garden.v1v3v3.garden.units/vmin*","mranderson047.garden.v1v3v3.garden.units/vmin-div","mranderson047.garden.v1v3v3.garden.units/vmin","mranderson047.garden.v1v3v3.garden.units/vmax?","mranderson047.garden.v1v3v3.garden.units/vmax+","mranderson047.garden.v1v3v3.garden.units/vmax-","mranderson047.garden.v1v3v3.garden.units/vmax*","mranderson047.garden.v1v3v3.garden.units/vmax-div","mranderson047.garden.v1v3v3.garden.units/vmax","mranderson047.garden.v1v3v3.garden.units/deg?","mranderson047.garden.v1v3v3.garden.units/deg+","mranderson047.garden.v1v3v3.garden.units/deg-","mranderson047.garden.v1v3v3.garden.units/deg*","mranderson047.garden.v1v3v3.garden.units/deg-div","mranderson047.garden.v1v3v3.garden.units/deg","mranderson047.garden.v1v3v3.garden.units/grad?","mranderson047.garden.v1v3v3.garden.units/grad+","mranderson047.garden.v1v3v3.garden.units/grad-","mranderson047.garden.v1v3v3.garden.units/grad*","mranderson047.garden.v1v3v3.garden.units/grad-div","mranderson047.garden.v1v3v3.garden.units/grad","mranderson047.garden.v1v3v3.garden.units/rad?","mranderson047.garden.v1v3v3.garden.units/rad+","mranderson047.garden.v1v3v3.garden.units/rad-","mranderson047.garden.v1v3v3.garden.units/rad*","mranderson047.garden.v1v3v3.garden.units/rad-div","mranderson047.garden.v1v3v3.garden.units/rad","mranderson047.garden.v1v3v3.garden.units/turn?","mranderson047.garden.v1v3v3.garden.units/turn+","mranderson047.garden.v1v3v3.garden.units/turn-","mranderson047.garden.v1v3v3.garden.units/turn*","mranderson047.garden.v1v3v3.garden.units/turn-div","mranderson047.garden.v1v3v3.garden.units/turn","mranderson047.garden.v1v3v3.garden.units/s?","mranderson047.garden.v1v3v3.garden.units/s+","mranderson047.garden.v1v3v3.garden.units/s-","mranderson047.garden.v1v3v3.garden.units/s*","mranderson047.garden.v1v3v3.garden.units/s-div","mranderson047.garden.v1v3v3.garden.units/s","mranderson047.garden.v1v3v3.garden.units/ms?","mranderson047.garden.v1v3v3.garden.units/ms+","mranderson047.garden.v1v3v3.garden.units/ms-","mranderson047.garden.v1v3v3.garden.units/ms*","mranderson047.garden.v1v3v3.garden.units/ms-div","mranderson047.garden.v1v3v3.garden.units/ms","mranderson047.garden.v1v3v3.garden.units/Hz?","mranderson047.garden.v1v3v3.garden.units/Hz+","mranderson047.garden.v1v3v3.garden.units/Hz-","mranderson047.garden.v1v3v3.garden.units/Hz*","mranderson047.garden.v1v3v3.garden.units/Hz-div","mranderson047.garden.v1v3v3.garden.units/Hz","mranderson047.garden.v1v3v3.garden.units/kHz?","mranderson047.garden.v1v3v3.garden.units/kHz+","mranderson047.garden.v1v3v3.garden.units/kHz-","mranderson047.garden.v1v3v3.garden.units/kHz*","mranderson047.garden.v1v3v3.garden.units/kHz-div","mranderson047.garden.v1v3v3.garden.units/kHz","mranderson047.garden.v1v3v3.garden.units/dpi?","mranderson047.garden.v1v3v3.garden.units/dpi+","mranderson047.garden.v1v3v3.garden.units/dpi-","mranderson047.garden.v1v3v3.garden.units/dpi*","mranderson047.garden.v1v3v3.garden.units/dpi-div","mranderson047.garden.v1v3v3.garden.units/dpi","mranderson047.garden.v1v3v3.garden.units/dpcm?","mranderson047.garden.v1v3v3.garden.units/dpcm+","mranderson047.garden.v1v3v3.garden.units/dpcm-","mranderson047.garden.v1v3v3.garden.units/dpcm*","mranderson047.garden.v1v3v3.garden.units/dpcm-div","mranderson047.garden.v1v3v3.garden.units/dpcm","mranderson047.garden.v1v3v3.garden.units/dppx?","mranderson047.garden.v1v3v3.garden.units/dppx+","mranderson047.garden.v1v3v3.garden.units/dppx-","mranderson047.garden.v1v3v3.garden.units/dppx*","mranderson047.garden.v1v3v3.garden.units/dppx-div","mranderson047.garden.v1v3v3.garden.units/dppx"]}